718. 最长重复子数组
dp[A.len+1][B.len+1](dp[i][j]表示以i和j为公共子数组结尾时的数组长度)，从1开始遍历该二维数组，如果当前A[i-1]和B[j-1]相等，则dp[i][j]=dp[i-1][j-1]+1，然后最大值等于其与dp[i][j]的大小。最后返回ans
345. 反转字符串中的元音字母
双指针头尾while遍历，里面两个while子循环，每次碰到一个元音字母就停止，如果此时i和j位置都是元音字母而且i<j，交换并且i++，j--,进入下一层遍历。最后返回修改后的结果，不用stringbuilder拼接字符数组，直接new String(字符数组)
350. 两个数组的交集 II
方法一:双指针，先对两个数组排序，在定义两个指针分别指向数组头部，如果两下标值相等，集合中加入该元素，否则根据情况i++或者j++，最后转成数组即可
方法二:哈希表存放数组元素相对较少的数组（key为值，value为出现次数）,遍历另外一个数组，如果当前集合中已经达到数组1的长度，直接退出，否则判断哈希表中是否含有该元素，如果有，只要value不为1，将该元素加入集合，value--,最后转成数组即可。
367. 有效的完全平方数
先对1,4,9进行判断，然后二分搜索，取left=0，right=num/3(这样保证mid*mid不会超过long范围)，然后如果mid*mid==num,返回true，大于则right=mid-1,小于则left=mid+1即可，最后返回left*left==num。