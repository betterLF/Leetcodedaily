139. 单词拆分
动态规划：定义一个boolean型dp数组，长度为字符串长度加1，从i=1开始遍历字符串，然后遍历单词表，如果单词表中的某个单词（长度为len）出现在以i位置前一个元素为结尾并且去除该单词后的下标即i-len为true，说明i可以拆分，置为true，退出第二层遍历，进行下一个第一层遍历
层次遍历:将0加入队列中，然后只要队列不空，就取出该下标，如果该下标未被访问过则找到以该下标为出发点的单词，将该单词末尾下标加入队列中，如果末尾刚好达到结点返回true，否则继续遍历下一个，如果最后队列为空，退出循环，则返回false
142. 环形链表 II
先定义快慢指针判断链表是否有环，快指针每次走两步，慢指针每次走一步，如果能重合说明有环，如果出现null说明无环。如果有环进行分析，设a+b为链表长度（b为环的长度），快慢指针相遇时f=2s（步数），并且f=s+nb(即快指针比慢指针多走了n个环长度），所以f=2nb，s=nb，而入口结点为a+nb，即s再走a步就能到达入口结点，所以定义另外两个双指针，分别指向重合结点和相遇结点，同时往后移，相遇点即是结果(两结点都走a步到达入口)
143. 重排链表
方法一:利用集合存放该链表，然后分奇偶双指针进行连接
方法二：第一步，找到中间结点（如果是偶数，就是左中间结点），第二步将右边的链表进行翻转，第三步，只要右边翻转的结点不到末尾，进行左右的拼接
144. 二叉树的前序遍历
1：递归
2:迭代（栈），将根节点加入栈中，只要栈不为空，弹出栈顶元素，如果其子节点存在的话，依次加入右子结点，左子节点