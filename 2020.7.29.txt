436. 寻找右区间
先用哈希表存放每个元素存在的初始位置，然后对数组每组元素的起始位置进行排序，后对每组元素进行二分搜索查找最近的右区间返回即可。
5472. 重新排列字符串
定义一个新的字符数组，然后遍历原字符串
 ans[indices[i]]=s.charAt(i)即可。
5473. 灯泡开关 IV
定义翻转次数，如果是偶数代表当前结果为0，否则为1
然后while循环遍历数组，如果当前翻转次数-目标值的结果除以2取余为0，则i++，即该位置不需要进行翻转，否则翻转次数加1，继续循环，最后返回翻转次数。
5474. 好叶子节点对的数量
对树进行左右遍历，如果是左子树，当前字符串加1，否则加2，如果到达末尾就将该字符串加入集合中。遍历结束，所有的叶子结点其字符串表达式都加入了集合，然后二层循环遍历该集合，每次遍历得到两个字符串进行比较，如果当前位置相同，继续下一个字符进行遍历，否则次数的距离为2+m.length()-1-count+n.length()-1-count，即从他们相同的位置开始(+2)减去他们各自剩下的路径即可，如果满足距离条件，结果加1，最后遍历结束，返回结果。