396. 旋转函数
动态规划，sum1记录数组总和，sum2记录开始时的运算结果
然后每次运算结果都是sum2+=sum1+len*A[i];(i从后往前推）
然后每次比较sum2和当前最大值的最大值，动态更新
397. 整数替换
如果n为int型最大值，直接返回32(如果+1会溢出)，如果为偶数直接返回1+dg(n/2)
如果为奇数，如果为3，返回2，否则如果该数可以整除4，返回1+dg(n+1）,否则返回1+dg(n-1）。
398. 随机数索引
蓄水池抽样，遍历数组，每次碰到目标元素，当前出现的目标元素个数n++，然后用随机数%n==0,使得每次以1/n的概率留下该数，这样可以使得最后每个数被选择的概率相同
399. 除法求值
DFS：将所有存在的除法的倒数除法也加入该集合，然后针对每个点进行dfs遍历，得到结果。
并查集:定义一个类Node，存放名称和它除它父节点的值以及它的父节点，初始化为自己
再定义一个map，key存放字符，value存放Node。遍历初始集合，将每个点加入该map集合，然后更新集合，即遍历集合，将两个点调用UnionAB连接起来(父节点连接起来)。然后返回getResult()方法得到结果
UnionAB（Node A,Node B，double value）:调用finderFather(Node A)方法得到A和B的根结点，然后令A的根节点的父节点指向B的根节点，所以A的根结点值为当前A/B的value值* calRatio(B) / calRatio(A)
 findFather(Node A)：如果当前结点的parent=自身，直接返回，否则递归返回
calRatio(Node A):定义结果为1.0,只要当前结点的父节点不为自身，结果就乘上当前结点值，当前结点后移
getResult():遍历算式，如果当前map中不含有其中一个结点，当前位置值为-1.0,否则得到当前两个结点的对应Node结点以及根节点，如果根结点不同，当前位置值为-1.0，否则当前位置值为 calRatio(node1) / calRatio(node2)。