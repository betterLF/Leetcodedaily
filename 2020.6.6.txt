13. 罗马数字转整数
遍历字符串，分7种情况讨论即可
300. 最长上升子序列
定义dp数组代表以当前下标处值为末尾的最长子序列长度
遍历数组nums，然后遍历前i-1个dp元素，如果nums[j]<nums[i]，就将dp[i]=max(dp[i],nums[j]+1)
最后对dp数组求个最大值即可。
优化：定义dp数组，下标代表为最长子序列的长度，值为该长度最小的末尾值
遍历原数组，如果nums[i]>dp[len],则dp[++len]=nums[i]，否则在0到len之间二分找到一个值最接近nums[i]的dp下标，使得其值=nums[i]
17. 电话号码的字母组合
回溯法，用StringBuilder（cur）保存回溯的结果，到达末尾时将cur.toString()加入结果集。
18. 四数之和
仿照三数之和，两层for循环，i，j，m，n(j=i+1)，在对j进行遍历前先对当前可获得的最大值和最小值与目标值进行比较，如果最小值>目标值，直接退出循环，如果最大值<目标值，直接i++，进行下一层循环，否则前后双指针进行求解，注意找到一种可能时，同时m++，n--，因为可能还有其他满足条件的结果。