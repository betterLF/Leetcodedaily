567. 字符串的排列
滑动窗口，先得到s1的字符出现个数数组，然后遍历s2，如果当前s2字符在个数数组中值大于0，则对应的count值--，数组值--，否则如果count不等于s1，则进行判断，如果当前字符是s1中的，则从左区间到右区间进行遍历，如果碰到相同的值则更新左区间值为遍历的下标+1，退出循环，否则如果当前值在s1中出现过，数组值++，count++；如果当前字符不在s1中，则更新count和数组为初始状态，左区间等于当前右区间+1即可。最后右区间++。最后返回count==0即可。
576. 出界的路径数
定义一个三维dp数组，一二维代表坐标，三维代表当前剩余的路径数。递归方法中如果当前剩余路径数小于0，返回0，如果当前无论如何走到不了边界返回0，如果当前到达边界返回1，如果当前位置已经走过，返回数组值，否则将当前点对应数组值变成四个方向的数组值除余100000007的结果并返回即可。
583. 两个字符串的删除操作
求出最长公共子序列即可得到答案，即两字符串长度-2*最长公共子序列长度。
求解最长公共子序列，定义dp数组[m+1][n+1]，从1开始遍历，如果当前遍历到的两个点值相同，则其值等于1+dp[i-1][j-1]，否则等于dp[i-1][j],dp[i][j-1]的最大值，最后返回m+n-2*dp[m][n]即可。