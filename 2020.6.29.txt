299. 猜数字游戏
xA 表示有 x 位数字出现在秘密数字中，且位置都与秘密数字一致。
yB 表示有 y 位数字出现在秘密数字中，但位置与秘密数字不一致。
定义长度为10的整型数组，遍历两个字符串，如果对应值相等，x++，然后secret对应的值所代表的数组下标值++，另外一个--，然后定义notExist,其值为数组中所有大于0的元素值，因此y=secret.length()-notExist-x。
201. 数字范围按位与
如果m和n相等，直接返回m，否则如果m!=0，就进行while循环，调用方法找到关键数（如果m和n之间包含一个2的n次方，而且该数不为m，就直接返回该数，否则找到距离m最近的一个2的n次方返回，可以是m本身），然后进行判断，如果值<m，则结果加上temp，m和n减去temp继续下一步，如果在两者之间，如果值==m，结果加上temp，然后直接退出循环(因为2的n次方只有1个1而且其前面还有数存在使得那个1的位置为0，所以这些位置最后与肯定为0)，返回结果
207. 课程表
广度优先搜索（深度优先较复杂）:定义一个数组存放每个课程的先决条件数，定义一个集合存放每个课程影响的课程，然后定义队列将所有数组值为0的元素加入队列，对队列进行遍历，取出头部元素，然后将其影响的课程的数组值-1，如果为0，就将该课程加入队列，直到队列为空。此时遍历数组，只要出现一个值不为0，说明该点未加入队列，返回false，否则，返回true。
208. 实现 Trie (前缀树)
 private boolean is_string=false;
 private Trie next[]=new Trie[26];
每个树结点下都有26个子树，如果一个子树不为null，代表该树字母的下一个字母中含有该字母。
 public void insert(String word)：从树的头部开始，遍历插入的字母，如果root.next[w[i]-'a']==null，代表该字母不在前缀树中，则在该点新建一个，使得其存在，然后当前结点后移，最后遍历完后的当前结点的is_string=true,代表从根遍历到当前位置是一个单词
  public boolean search(String word):从树的头部开始，遍历插入的字母，如果root.next[w[i]-'a']==null，代表下一层未出现该字母，则直接返回false，否则一直遍历，如果遍历结束，则判断当前结点的is_string是否为true，如果是代表是一个单词，否则不是。
 public boolean startsWith(String prefix):和search一样，但是只要能遍历结束就说明存在前缀，直接返回true。
