669. 修剪二叉搜索树
递归搜索，根据当前值只要不满足条件就while循环，根据其是在临界值左边还是右边，更新当前结点，如果while结束后cur==null，返回null，否则cur的左右子树递归更新，返回cur即可。
671. 二叉树中第二小的节点
前序遍历，有题意可知最小结点一定为根节点，所以只要找到比根节点大的元素即可。递归求解，如果当前结点为空，返回-1，如果大于最小值，返回该点(代表其可能是第二个最小值，而且不用往后遍历，后面会越来越大)，否则左右递归，返回左右两边的最小值(如果有一个为-1，就返回-1)。
674. 最长连续递增序列
双指针遍历，如果数组为空，返回-1，否则初始化L=0,R=1，while遍历数组，如果当前nums[R]>nums[R-1],则R++，否则更新最大值，并且L=R,R=R+1。while结束后再更新一次最大值防止遍历到头一直符合条件。