101. 对称二叉树
递归：
如果同时满足下面的条件，两个树互为镜像：
它们的两个根结点具有相同的值。
每个树的右子树都与另一个树的左子树镜像对称。
因此可以递归调用实现
迭代：
我们也可以利用队列进行迭代。队列中每两个连续的结点应该是相等的，而且它们的子树互为镜像。最初，队列中包含的是 root 以及 root。该算法的工作原理类似于 BFS，但存在一些关键差异。每次提取两个结点并比较它们的值。然后，将两个结点的左右子结点按相反的顺序插入队列中。当队列为空时，或者我们检测到树不对称（即从队列中取出两个不相等的连续结点）时，该算法结束
107. 二叉树的层次遍历 II
用队列存放每层元素，while循环，如果队列不为空，就弹出该层的元素（count记录该层个数），并且将该层结点的子节点加入队列，计算个数，然后将弹出的元素加入集合中，最后逆序存放结果，即用链表集合每次都在0位置加入元素。
108. 将有序数组转换为二叉搜索树
递归实现，将当前数组长度的中间位置作为该数组的父节点，然后该父节点的左节点为中间位置的左半部分，右节点为中间位置的右半部分。
110. 平衡二叉树
定义函数求解该节点的高度，然后对于主函数，如果该节点左右子树高度小于等于1，递归调用左和右子树（判断一左和右子树为父节点是否平衡）的并。